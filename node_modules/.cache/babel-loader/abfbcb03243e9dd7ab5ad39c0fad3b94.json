{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pt\\\\Desktop\\\\React Projects\\\\coding challenge\\\\src\\\\Components\\\\FormControl.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Label from './Label';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FormControl() {\n  _s();\n\n  const [name, setNames] = useState([]);\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch(`https://jsonplaceholder.typicode.com/users`);\n        const data = await response.json();\n        setNames(data);\n      } catch (e) {\n        setNames([]);\n        console.log(e);\n      }\n    };\n\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Select a  User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"names\",\n      children: [name.length === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"nothing\",\n        children: \"Nothing to Show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 27\n      }, this) : name.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 19\n        }, this);\n      }), name && console.log(\"hello\"), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormControl, \"6tVUDEEobwzM1Ny40qDzQIzE/Rs=\");\n\n_c = FormControl;\nexport default FormControl;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormControl\");","map":{"version":3,"sources":["C:/Users/pt/Desktop/React Projects/coding challenge/src/Components/FormControl.jsx"],"names":["React","useEffect","useState","Label","FormControl","name","setNames","getData","response","fetch","data","json","e","console","log","length","map","item","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AACA,SAASC,WAAT,GAAuB;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAMC,QAAN,IAAgBJ,QAAQ,CAAC,EAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACd,UAAMM,OAAO,GAAC,YAAS;AACnB,UAAG;AACH,cAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAE,4CAAF,CAA1B;AACA,cAAMC,IAAI,GAAC,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACAL,QAAAA,QAAQ,CAACI,IAAD,CAAR;AACC,OAJD,CAKA,OAAME,CAAN,EAAQ;AACJN,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,KAVD;;AAWAL,IAAAA,OAAO;AACN,GAbQ,EAaP,EAbO,CAAT;AAcE,sBACE;AAAA,4BACA;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAA,iBAEIF,IAAI,CAACU,MAAL,KAAc,CAAd,gBAAkB;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlB,GACAV,IAAI,CAACW,GAAL,CAAUC,IAAD,IAAQ;AACd,4BAAO;AAAQ,UAAA,KAAK,EAAEA,IAAI,CAACC,EAApB;AAAA,oBAAyBD,IAAI,CAACZ;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACF,OAFD,CAHJ,EAOCA,IAAI,IAAIQ,OAAO,CAACC,GAAR,CAAY,OAAZ,CAPT;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA/BQV,W;;KAAAA,W;AAiCT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Label from './Label'\r\nfunction FormControl() {\r\nconst [name,setNames]=useState([]);\r\n\r\nuseEffect(()=>{\r\nconst getData=async()=>{\r\n    try{\r\n    const response=await fetch(`https://jsonplaceholder.typicode.com/users`);\r\n    const data=await response.json();\r\n    setNames(data);\r\n    }\r\n    catch(e){\r\n        setNames([]);\r\n        console.log(e);\r\n    }\r\n}\r\ngetData();\r\n},[])\r\n  return (\r\n    <form>\r\n    <label htmlFor=\"name\">Select a  User</label>\r\n    <select id=\"names\">\r\n    {\r\n        name.length===0 ? <option value=\"nothing\">Nothing to Show</option>:\r\n        name.map((item)=>{\r\n           return <option value={item.id}>{item.name}</option> \r\n        }) \r\n    }\r\n    {name && console.log(\"hello\")};\r\n        </select>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default FormControl"]},"metadata":{},"sourceType":"module"}