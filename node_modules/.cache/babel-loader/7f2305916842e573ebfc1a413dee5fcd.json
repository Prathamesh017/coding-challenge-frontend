{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pt\\\\Desktop\\\\React Projects\\\\coding challenge\\\\src\\\\Components\\\\Label.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport Map from './Map';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Label() {\n  _s();\n\n  const [name, setNames] = useState([]);\n  const [mapAddress, setMapAddress] = useState(\"\");\n\n  const setAddress = e => {\n    if (e) {\n      const n = name.filter(na => {\n        if (na.id == e) {\n          return na.id;\n        }\n      });\n      setMapAddress(n[0].address);\n    } else {\n      setMapAddress(\"\");\n    }\n  };\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await fetch(`https://jsonplaceholder.typicode.com/users`);\n        const data = await response.json();\n        setNames(data);\n      } catch (e) {\n        setNames([]);\n      }\n    };\n\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"name\",\n      children: \"Select a  User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"names\",\n      onChange: e => setAddress(e.target.value),\n      children: name.length === 0 ? /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"nothing\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 27\n      }, this) : // <div>\n\n      /*#__PURE__*/\n      _jsxDEV(\"option\", {\n        value: \"none\",\n        children: \"Please Select  A  User \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this) && name.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: item.id,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Map, {\n      mapAddress: mapAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Label, \"oaWgbqnG3vdXL7rgKoVuTDCUihM=\");\n\n_c = Label;\nexport default Label;\n\nvar _c;\n\n$RefreshReg$(_c, \"Label\");","map":{"version":3,"sources":["C:/Users/pt/Desktop/React Projects/coding challenge/src/Components/Label.jsx"],"names":["React","useEffect","useState","Map","Label","name","setNames","mapAddress","setMapAddress","setAddress","e","n","filter","na","id","address","getData","response","fetch","data","json","target","value","length","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AACA,SAASC,KAAT,GAAiB;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAMC,QAAN,IAAgBJ,QAAQ,CAAC,EAAD,CAA9B;AACD,QAAM,CAACK,UAAD,EAAYC,aAAZ,IAA2BN,QAAQ,CAAC,EAAD,CAAzC;;AACA,QAAMO,UAAU,GAAEC,CAAD,IAAK;AAClB,QAAGA,CAAH,EAAK;AACG,YAAMC,CAAC,GAACN,IAAI,CAACO,MAAL,CAAaC,EAAD,IAAM;AAClB,YAAGA,EAAE,CAACC,EAAH,IAAOJ,CAAV,EAAY;AACR,iBAAOG,EAAE,CAACC,EAAV;AACH;AACJ,OAJG,CAAR;AAKIN,MAAAA,aAAa,CAACG,CAAC,CAAC,CAAD,CAAD,CAAKI,OAAN,CAAb;AACH,KAPT,MAQY;AACAP,MAAAA,aAAa,CAAC,EAAD,CAAb;AACH;AACZ,GAZD;;AAcAP,EAAAA,SAAS,CAAC,MAAI;AACd,UAAMe,OAAO,GAAC,YAAS;AACnB,UAAG;AACH,cAAMC,QAAQ,GAAC,MAAMC,KAAK,CAAE,4CAAF,CAA1B;AACA,cAAMC,IAAI,GAAC,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACAd,QAAAA,QAAQ,CAACa,IAAD,CAAR;AAEC,OALD,CAMA,OAAMT,CAAN,EAAQ;AACJJ,QAAAA,QAAQ,CAAC,EAAD,CAAR;AAEH;AACJ,KAXD;;AAaAU,IAAAA,OAAO;AACN,GAfQ,EAeP,EAfO,CAAT;AAgBE,sBAGE;AAAA,4BACA;AAAO,MAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAmB,MAAA,QAAQ,EAAGN,CAAD,IAAKD,UAAU,CAACC,CAAC,CAACW,MAAF,CAASC,KAAV,CAA5C;AAAA,gBAEIjB,IAAI,CAACkB,MAAL,KAAc,CAAd,gBAAkB;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAlB,GACA;;AACA;AAAA;AAAQ,QAAA,KAAK,EAAE,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACAlB,IAAI,CAACmB,GAAL,CAAUC,IAAD,IAAQ;AACb,4BAAO;AAAQ,UAAA,KAAK,EAAEA,IAAI,CAACX,EAApB;AAAA,oBAAuCW,IAAI,CAACpB;AAA5C,WAA6BoB,IAAI,CAACX,EAAlC;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD;AALJ;AAAA;AAAA;AAAA;AAAA,YAFA,eAeA,QAAC,GAAD;AAAK,MAAA,UAAU,EAAEP;AAAjB;AAAA;AAAA;AAAA;AAAA,YAfA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAuBD;;GAxDQH,K;;KAAAA,K;AA0DT,eAAeA,KAAf","sourcesContent":["import React from 'react'\r\nimport {useEffect,useState} from \"react\" ;\r\nimport Map from './Map';\r\nfunction Label() {\r\n const [name,setNames]=useState([]);\r\nconst [mapAddress,setMapAddress]=useState(\"\");\r\nconst setAddress=(e)=>{\r\n    if(e){\r\n            const n=name.filter((na)=>{\r\n                    if(na.id==e){\r\n                        return na.id;\r\n                    }\r\n                })\r\n                setMapAddress(n[0].address);\r\n            }\r\n            else{\r\n                setMapAddress(\"\");\r\n            }\r\n}\r\n\r\nuseEffect(()=>{\r\nconst getData=async()=>{\r\n    try{\r\n    const response=await fetch(`https://jsonplaceholder.typicode.com/users`);\r\n    const data=await response.json();\r\n    setNames(data);\r\n  \r\n    }\r\n    catch(e){\r\n        setNames([]);\r\n        \r\n    }\r\n}\r\n\r\ngetData();\r\n},[])\r\n  return (\r\n     \r\n\r\n    <form>\r\n    <label htmlFor=\"name\">Select a  User</label>\r\n    <select id=\"names\" onChange={(e)=>setAddress(e.target.value)}>\r\n    {\r\n        name.length===0 ? <option value=\"nothing\">Loading...</option>:\r\n        // <div>\r\n        <option value={\"none\"}>Please Select  A  User </option> &&\r\n        name.map((item)=>{\r\n            return <option value={item.id} key={item.id}>{item.name}</option> \r\n        })\r\n    } \r\n      \r\n    \r\n  \r\n        </select>\r\n    <Map mapAddress={mapAddress}></Map>\r\n    </form>\r\n   \r\n  )\r\n  \r\n}\r\n\r\nexport default Label"]},"metadata":{},"sourceType":"module"}