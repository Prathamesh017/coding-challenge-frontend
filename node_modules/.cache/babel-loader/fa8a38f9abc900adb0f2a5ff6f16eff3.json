{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pt\\\\Desktop\\\\React Projects\\\\coding challenge\\\\src\\\\Components\\\\Input.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport { Axios } from 'axios';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Input() {\n  _s();\n\n  const [info, setinfo] = useState({\n    title: \"\",\n    body: \"\"\n  });\n  const [error, setError] = useState(false);\n  const [test, setTest] = useState({\n    value: false,\n    msg: \"\"\n  });\n\n  const sendInfo = e => {\n    const {\n      name,\n      value\n    } = e;\n    setinfo(prev => {\n      return { ...prev,\n        [name]: value\n      };\n    });\n    set;\n  };\n\n  const getData2 = async () => {\n    try {\n      const response = await axios.post(`https://jsonplaceholder.typicode.com/posts`, {\n        userId: 1,\n        title: info.title,\n        body: info.body\n      });\n      setTest({\n        value: true,\n        msg: \"Message Sent Succesfully\"\n      });\n    } catch (e) {\n      setTest({\n        value: true,\n        msg: \"Request Failed\"\n      });\n      console.log(e);\n    }\n  };\n\n  const submitData = () => {\n    setError(true);\n\n    if (info.title === \"\" || info.body === \"\") {\n      return;\n    }\n\n    getData2();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"enter title\",\n          name: \"title\",\n          onChange: e => sendInfo(e.target)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), error && info.title === \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \"Please enter title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"enter body\",\n          name: \"body\",\n          onChange: e => {\n            sendInfo(e.target);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), error && info.body === \"\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: \"Please enter body\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submitBtn\",\n      onClick: submitData,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), test.value && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: test.msg === \"Request Failed\" ? \"error\" : \"success\",\n      children: test.msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Input, \"03kxnfO95qOLzUtrrbhStYkMiIQ=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/pt/Desktop/React Projects/coding challenge/src/Components/Input.jsx"],"names":["React","axios","Axios","useState","useEffect","Input","info","setinfo","title","body","error","setError","test","setTest","value","msg","sendInfo","e","name","prev","set","getData2","response","post","userId","console","log","submitData","target"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\nimport { Axios } from 'axios';\r\nimport { useState ,useEffect} from 'react'\r\n\r\nfunction Input() {\r\n  const [info,setinfo]=useState({\r\n    title:\"\",\r\n    body:\"\"\r\n  })\r\nconst [error,setError]=useState(false);\r\nconst [test,setTest]=useState({value:false,msg:\"\"});\r\n\r\nconst sendInfo=(e)=>{\r\n const{name,value}=e;\r\n setinfo((prev)=>{\r\n  return {...prev,[name]:value}\r\n })\r\n set\r\n}\r\n\r\n\r\nconst getData2=async()=>{\r\ntry{\r\nconst response=await  axios.post(`https://jsonplaceholder.typicode.com/posts`,{\r\n  userId:1,\r\n  title:info.title,\r\n  body:info.body\r\n})\r\nsetTest({\r\n  value:true,\r\n  msg:\"Message Sent Succesfully\"\r\n})\r\n}\r\n\r\ncatch(e){\r\n  setTest({\r\n    value:true,\r\n    msg:\"Request Failed\"\r\n  })\r\nconsole.log(e);\r\n}\r\n}\r\nconst submitData=()=>{\r\n  setError(true);\r\n  if(info.title===\"\" || info.body===\"\"){\r\n    return;\r\n  }\r\n  getData2();\r\n}\r\n\r\n  return (\r\n      <div className='input-box'>\r\n    <div className=\"inputs\">\r\n      <div className=\"input-1\">\r\n        <input type=\"text\" placeholder=\"enter title\" name=\"title\" onChange={e=>sendInfo(e.target)}></input>\r\n       {(error && info.title===\"\") && <p className='error'>Please enter title</p>}\r\n      </div>\r\n      <div className=\"input-2\">\r\n        <input type=\"text\" placeholder=\"enter body\"  name=\"body\" onChange={e=>{sendInfo(e.target)}}></input>\r\n        {(error && info.body===\"\") && <p className='error'>Please enter body</p>}\r\n      </div>\r\n    </div>\r\n    <button className='submitBtn' onClick={submitData}>Submit</button>\r\n    { test.value && <p className={test.msg===\"Request Failed\"? \"error\":\"success\"}>{test.msg}</p>}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Input"]},"metadata":{},"sourceType":"module"}